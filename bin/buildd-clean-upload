#!/usr/bin/perl
#
# Copyright Â© 1999 Roman Hodek <Roman.Hodek@informatik.uni-erlangen.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
#######################################################################

use strict;
use warnings;
use vars qw($debianroot @dists @components);

use Buildd;
use Buildd::Conf;
use Sbuild::OptionsBase;

my $conf = Buildd::Conf->new();
exit 1 if !defined($conf);
my $options = Sbuild::OptionsBase->new($conf, "buildd-clean-upload", "1");
exit 1 if !defined($options);

sub in_archive ($);
sub get_files_from_changes ($);
sub split_debname ($);

$debianroot = "/pub/Linux/debian";
@dists = qw(unstable);
@components = qw(main non-US/main);

chdir( "$main::HOME/upload" ) or die "Can't cd to ~/upload: $!\n";

my @jobs = glob( "*.changes" );
my $job;
foreach $job (@jobs) {
    if (!open( F, "$job" )) {
	warn "Cannot open $job: $!\n";
	next;
    }
    my $changes_text;
    { local($/); undef $/; $changes_text = <F>; }
    close( F );
    my @files = get_files_from_changes( $changes_text );
    my $in_arch = 1;
    foreach (@files) {
	if (!in_archive( $_ )) {
	    $in_arch = 0;
	    last;
	}
    }
    if (!$in_arch) {
	print "Not deleting $job\n" if $conf->get('VERBOSE');
	next;
    }

    (my $upload = $job) =~ s/\.changes$/.upload/;
    unlink @files, $job, $upload;
    print "Removed $job\n" if $conf->get('VERBOSE');
}


sub in_archive ($) {
    my $fn = shift;
    my ($p, $v, $a) = split_debname($fn);
    my $afn = "${p}_${v}.deb";

    my ($dist, $comp);
    foreach $dist (@dists) {
	foreach $comp (@components) {
	    my @found = glob("$debianroot/dists/$dist/$comp/binary-$a/*/$afn");
	    return 1 if @found;
	}
    }
    return 0;
}

sub get_files_from_changes ($) {
    my $changes_text = shift;
    my(@filelines, @files);

    $changes_text =~ /^Files:\s*\n((^[ 	]+.*\n)*)/m;
    @filelines = split( "\n", $1 );
    foreach (@filelines) {
	push( @files, (split( /\s+/, $_ ))[5] );
    }
    return @files;
}

sub split_debname ($) {
    my $pkgv = shift;

    if ($pkgv !~ /^([a-zA-Z\d.+-]+)_([a-zA-Z\d:.~+-]+)(_([a-zA-Z\d-]+))?\.deb$/) {
	warn "Bad package name: $pkgv\n";
	return ("", "", "");
    }
    return ($1, $2, $4);
}
