#!/usr/bin/perl
#
# Copyright Â© 2011 Roger Leigh <rleigh@debian.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
#######################################################################

use strict;
use warnings;
use Exception::Class::TryCatch;

package Conf;

sub setup {
    my $conf = shift;

    my %db_keys = (
	'DBSERVICE'				=> {
	    DEFAULT => 'sbuild'
	},
	'DBUSER'				=> {
	    DEFAULT => 'rleigh'
	},
	'DBPASSWORD'				=> {
	    DEFAULT => ''
	},
	'GPG_KEYRING'				=> {
	    DEFAULT => ''
	},
	'ARCHIVE_CACHE'				=> {
	    DEFAULT => '/var/cache/sbuild/db/archive'
	},
	'FORCE'					=> {
	    DEFAULT => 0
	}
    );

    $conf->set_allowed_keys(\%db_keys);
}

package Options;

use Sbuild::OptionsBase;
use Sbuild::Conf qw();

BEGIN {
    use Exporter ();
    our (@ISA, @EXPORT);

    @ISA = qw(Exporter Sbuild::OptionsBase);

    @EXPORT = qw();
}

sub set_options {
    my $self = shift;

    $self->add_options(
	"db-service=s" => sub {
	    $self->set_conf('DBSERVICE', $_[1]);
	},
	"db-user=s" => sub {
	    $self->set_conf('DBUSER', $_[1]);
	},
	"db-password=s" => sub {
	    $self->set_conf('DBPASSWORD', $_[1]);
	},
	"force|f" => sub {
	    $self->set_conf('FORCE', 1);
	},
	"gpg-keyring=s" => sub {
	    $self->set_conf('GPG_KEYRING', $_[1]);
	});
}

package main;

use Getopt::Long;
use Switch;

use Sbuild qw(help_text version_text usage_error);
use Sbuild::DB;

try eval {
    my $conf = Sbuild::Conf::new();
    Conf::setup($conf);
    exit 1 if !defined($conf);
    my $options = Options->new($conf, "sbuild-db", "1");
    exit 1 if !defined($options);
    my $db = Sbuild::DB->new($conf);
    exit 1 if !defined($db);

    if (@ARGV < 1) {
	$db->list_commands();
	exit(1);
    }

    $db->run_command(@ARGV);
};

if (catch my $err) {
    print STDERR "E: $err\n";
    if ($err->isa('Sbuild::Exception::DB')) {
	print STDERR "I: " . $err->info . "\n"
	    if ($err->info);
	print STDERR "Usage: sbuild-db " . $err->usage . "\n"
	    if ($err->usage);
	# print "TRACE: " . $err->trace->as_string. "\n";
    }
    exit(1);
}
exit 0;
