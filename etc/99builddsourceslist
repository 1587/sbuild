#!/bin/sh
# Copyright Â© 2010 Marc Brockschmidt <he@debian.org>
#
# buildd is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# buildd is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
#####################################################################

set -e

if [ -f "$CHROOT_SCRIPT_CONFIG" ]; then
    . "$CHROOT_SCRIPT_CONFIG"
elif [ "$2" = "ok" ]; then
    echo "script-config file '$CHROOT_SCRIPT_CONFIG' does not exist"
    exit 1
fi

VERBOSE=""
if [ "$AUTH_VERBOSITY" = "verbose" ]; then
	  VERBOSE="--verbose"
fi

if [ -f /etc/schroot/conf.buildd ]; then
    . /etc/schroot/conf.buildd
fi

if [ "$1" = "setup-start" ] || [ "$1" = "setup-recover" ]; then
	if [ -n "$SUITE_VARIANT" ]; then
		SOURCES_FILE_NAME="${SUITE_BASE}-${SUITE_VARIANT}.sources"
		SOURCES_FILE_PATH="/etc/schroot/buildd.d/${SOURCES_FILE_NAME}"
                APT_LIST_AUTO="${CHROOT_PATH}/etc/apt/sources.list.d/auto.list"

		if [ -f "$SOURCES_FILE_PATH" ]; then
			if [ "$SUITE_BASE" = "etch" ]; then
				cp $VERBOSE ${CHROOT_PATH}/etc/apt/sources.list ${CHROOT_PATH}/etc/apt/sources.list.backup
				if [ ! -z "$VERBOSE" ]; then
					echo cat '<'${SOURCES_FILE_PATH} '>>'"${CHROOT_PATH}/etc/apt/sources.list"
				fi
				cat <${SOURCES_FILE_PATH} >>"${CHROOT_PATH}/etc/apt/sources.list"
			else
				cp $VERBOSE ${SOURCES_FILE_PATH} "${CHROOT_PATH}/etc/apt/sources.list.d/${SOURCES_FILE_NAME}.list"
			fi
                elif [ ${SUITE_VARIANT} == 'security' ]; then
                    if [ "$SUITE_BASE" = "etch" ]; then
			cp $VERBOSE ${CHROOT_PATH}/etc/apt/sources.list ${CHROOT_PATH}/etc/apt/sources.list.backup
                        APT_LIST_AUTO=${CHROOT_PATH}/etc/apt/sources.list
                    else
                        : > ${APT_LIST_AUTO}
                    fi
                    if [ -n "${security_mirror}" ]; then
                        echo deb ${security_mirror} ${SUITE_BASE}/updates main contrib >> ${APT_LIST_AUTO}
                        echo deb-src ${security_mirror} ${SUITE_BASE}/updates main contrib >> ${APT_LIST_AUTO}
                    fi
                    echo deb http://security-master.debian.org/debian-security ${SUITE_BASE}/updates main contrib >> ${APT_LIST_AUTO}
                    echo deb-src http://security-master.debian.org/debian-security ${SUITE_BASE}/updates main contrib >> ${APT_LIST_AUTO}
                    echo deb http://security-master.debian.org/buildd ${SUITE_BASE}/ >> ${APT_LIST_AUTO}
                    echo deb-src http://security-master.debian.org/buildd ${SUITE_BASE}/ >> ${APT_LIST_AUTO}
                elif [ ${SUITE_VARIANT} == 'volatile' ]; then
                    if [ "$SUITE_BASE" = "etch" ]; then
			cp $VERBOSE ${CHROOT_PATH}/etc/apt/sources.list ${CHROOT_PATH}/etc/apt/sources.list.backup
                        APT_LIST_AUTO=${CHROOT_PATH}/etc/apt/sources.list
                    else
                        : > ${APT_LIST_AUTO}
                    fi
                    if [ -n "${volatile_mirror}" ]; then
                        echo deb ${volatile_mirror} ${SUITE_BASE}-proposed-updates/volatile main contrib non-free >> ${APT_LIST_AUTO}
                        echo deb ${volatile_mirror} ${SUITE_BASE}/volatile main contrib non-free >> ${APT_LIST_AUTO}
                        echo deb-src ${volatile_mirror} ${SUITE_BASE}-proposed-updates/volatile main contrib non-free >> ${APT_LIST_AUTO}
                        echo deb-src ${volatile_mirror} ${SUITE_BASE}/volatile main contrib non-free >> ${APT_LIST_AUTO}
                    fi
                    echo deb http://volatile.debian.net/debian-volatile ${SUITE_BASE}-proposed-updates/volatile main contrib non-free >> ${APT_LIST_AUTO}
                    echo deb http://volatile.debian.net/debian-volatile ${SUITE_BASE}/volatile main contrib non-free >> ${APT_LIST_AUTO}
                    echo deb-src http://volatile.debian.net/debian-volatile ${SUITE_BASE}-proposed-updates/volatile main contrib non-free >> ${APT_LIST_AUTO}
                    echo deb-src http://volatile.debian.net/debian-volatile ${SUITE_BASE}/volatile main contrib non-free >> ${APT_LIST_AUTO}
                elif [ ${SUITE_VARIANT} == 'backports' ]; then
                    if [ "$SUITE_BASE" = "etch" ]; then
			cp $VERBOSE ${CHROOT_PATH}/etc/apt/sources.list ${CHROOT_PATH}/etc/apt/sources.list.backup
                        APT_LIST_AUTO=${CHROOT_PATH}/etc/apt/sources.list
                    else
                        : > ${APT_LIST_AUTO}
                    fi
                    if [ -n "${backports_mirror}" ]; then
                        echo deb ${backports_mirror} ${SUITE_BASE}-backports main contrib non-free >> ${APT_LIST_AUTO}
                        echo deb-src ${backports_mirror} ${SUITE_BASE}-backports main contrib non-free >> ${APT_LIST_AUTO}
                    fi
                    echo deb http://www.backports.org/buildd/ ${SUITE_BASE}-backports main contrib non-free >> ${APT_LIST_AUTO}
                    echo deb-src http://www.backports.org/buildd/ ${SUITE_BASE}-backports main contrib non-free >> ${APT_LIST_AUTO}
                elif [ ${SUITE_VARIANT} == 'experimental' ]; then
                    : > ${APT_LIST_AUTO}
                    if [ -n "${debian_mirror}" ]; then
                        echo deb ${debian_mirror} experimental main contrib non-free >> ${APT_LIST_AUTO}
                        echo deb-src ${debian_mirror} experimental main contrib non-free >> ${APT_LIST_AUTO}
                    fi
                    echo deb     http://ftp.debian.org/debian experimental main contrib non-free >> ${APT_LIST_AUTO}
                    echo deb-src http://ftp.debian.org/debian experimental main contrib non-free >> ${APT_LIST_AUTO}
                    echo deb     http://incoming.debian.org/buildd-experimental / >> ${APT_LIST_AUTO}
                    echo deb-src http://incoming.debian.org/buildd-experimental / >> ${APT_LIST_AUTO}
		fi
	fi
elif [ "$1" = "setup-stop" ]; then
	if [ -n "$SUITE_VARIANT" ]; then
		SOURCES_FILE_NAME="${SUITE_BASE}-${SUITE_VARIANT}.sources"
		SOURCES_FILE_PATH="/etc/schroot/buildd.d/${SOURCES_FILE_NAME}"

		if [ -f "$SOURCES_FILE_PATH" ]; then
			if [ "$SUITE_BASE" = "etch" ]; then
				cp $VERBOSE ${CHROOT_PATH}/etc/apt/sources.list.backup ${CHROOT_PATH}/etc/apt/sources.list
			else
				rm $VERBOSE "${CHROOT_PATH}/etc/apt/sources.list.d/${SOURCES_FILE_NAME}.list"
			fi
                elif [ ${SUITE_VARIANT} == 'security' ] || [ ${SUITE_VARIANT} == 'volatile' ] || [ ${SUITE_VARIANT} == 'backports' ] || [ ${SUITE_VARIANT} == 'experimental' ] ; then
			if [ "$SUITE_BASE" = "etch" ]; then
				cp $VERBOSE ${CHROOT_PATH}/etc/apt/sources.list.backup ${CHROOT_PATH}/etc/apt/sources.list
			else
				rm $VERBOSE "${CHROOT_PATH}/etc/apt/sources.list.d/auto.list"
			fi
		fi
	fi
fi
